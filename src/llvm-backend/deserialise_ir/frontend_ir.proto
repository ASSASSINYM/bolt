// protoc file autogenerated from OCaml type definitions
package Frontend_ir;

// frontend_ir.ml:19
message un_op {
  enum _tag {
    UnOpNot_tag = 1;
    UnOpNeg_tag = 2;
  }
  
  required _tag tag = 1;
}

// frontend_ir.ml:24
message bin_op {
  enum _tag {
    BinOpPlus_tag = 1;
    BinOpMinus_tag = 2;
    BinOpMult_tag = 3;
    BinOpIntDiv_tag = 4;
    BinOpRem_tag = 5;
    BinOpLessThan_tag = 6;
    BinOpLessThanEq_tag = 7;
    BinOpGreaterThan_tag = 8;
    BinOpGreaterThanEq_tag = 9;
    BinOpAnd_tag = 10;
    BinOpOr_tag = 11;
    BinOpEq_tag = 12;
    BinOpNotEq_tag = 13;
  }
  
  required _tag tag = 1;
}

// frontend_ir.ml:55
message type_expr {
  enum _tag {
    TEInt_tag = 1;
    TEClass_tag = 2;
    TEVoid_tag = 3;
    TEBool_tag = 4;
  }
  
  required _tag tag = 1;
  oneof value {
    string TEClass = 3;
  }
}

// frontend_ir.ml:68
message param {
  enum _tag {
    TParam_tag = 1;
    TVoid_tag = 2;
  }
  
  // frontend_ir.ml:69
  message _TParam {
    required type_expr _0 = 1;
    required string _1 = 2;
  }
  
  required _tag tag = 1;
  oneof value {
    _TParam TParam = 2;
  }
}

// frontend_ir.ml:71
message identifier {
  enum _tag {
    Variable_tag = 1;
    ObjField_tag = 2;
  }
  
  // frontend_ir.ml:74
  message _ObjField {
    required string _0 = 1;
    required int64 _1 = 2;
  }
  
  required _tag tag = 1;
  oneof value {
    string Variable = 2;
    _ObjField ObjField = 3;
  }
}

// frontend_ir.ml:76
message expr {
  enum _tag {
    Unit_tag = 1;
    Integer_tag = 2;
    Boolean_tag = 3;
    Identifier_tag = 4;
    Constructor_tag = 5;
    Let_tag = 6;
    Assign_tag = 7;
    Consume_tag = 8;
    FunctionApp_tag = 9;
    FinishAsync_tag = 10;
    IfElse_tag = 11;
    WhileLoop_tag = 12;
    BinOp_tag = 13;
    UnOp_tag = 14;
  }
  
  // frontend_ir.ml:99
  message _Constructor {
    required string _0 = 1;
    repeated constructor_arg _1 = 2;
  }
  
  // frontend_ir.ml:99
  message _Let {
    required string _0 = 1;
    required expr _1 = 2;
  }
  
  // frontend_ir.ml:99
  message _Assign {
    required identifier _0 = 1;
    required expr _1 = 2;
  }
  
  // frontend_ir.ml:99
  message _FunctionApp {
    required string _0 = 1;
    required exprs _1 = 2;
  }
  
  // frontend_ir.ml:99
  message _FinishAsync {
    repeated exprs _0 = 1;
    required exprs _1 = 2;
  }
  
  // frontend_ir.ml:99
  message _IfElse {
    required expr _0 = 1;
    required exprs _1 = 2;
    required exprs _2 = 3;
  }
  
  // frontend_ir.ml:99
  message _WhileLoop {
    required expr _0 = 1;
    required exprs _1 = 2;
  }
  
  // frontend_ir.ml:99
  message _BinOp {
    required bin_op _0 = 1;
    required expr _1 = 2;
    required expr _2 = 3;
  }
  
  // frontend_ir.ml:99
  message _UnOp {
    required un_op _0 = 1;
    required expr _1 = 2;
  }
  
  required _tag tag = 1;
  oneof value {
    int64 Integer = 3;
    bool Boolean = 4;
    identifier Identifier = 5;
    _Constructor Constructor = 6;
    _Let Let = 7;
    _Assign Assign = 8;
    identifier Consume = 9;
    _FunctionApp FunctionApp = 10;
    _FinishAsync FinishAsync = 11;
    _IfElse IfElse = 12;
    _WhileLoop WhileLoop = 13;
    _BinOp BinOp = 14;
    _UnOp UnOp = 15;
  }
}

// frontend_ir.ml:95
message exprs {
  repeated expr _ = 1;
}

// frontend_ir.ml:98
message constructor_arg {
  enum _tag {
    ConstructorArg_tag = 1;
  }
  
  // frontend_ir.ml:99
  message _ConstructorArg {
    required int64 _0 = 1;
    required expr _1 = 2;
  }
  
  required _tag tag = 1;
  oneof value {
    _ConstructorArg ConstructorArg = 2;
  }
}

// frontend_ir.ml:103
message function_defn {
  enum _tag {
    TFunction_tag = 1;
  }
  
  // frontend_ir.ml:104
  message _TFunction {
    required string _0 = 1;
    required type_expr _1 = 2;
    repeated param _2 = 3;
    repeated expr _3 = 4;
  }
  
  required _tag tag = 1;
  oneof value {
    _TFunction TFunction = 2;
  }
}

// frontend_ir.ml:108
message class_defn {
  enum _tag {
    TClass_tag = 1;
  }
  
  // frontend_ir.ml:109
  message _TClass {
    required string _0 = 1;
    repeated type_expr _1 = 2;
  }
  
  required _tag tag = 1;
  oneof value {
    _TClass TClass = 2;
  }
}

// frontend_ir.ml:113
message program {
  enum _tag {
    Prog_tag = 1;
  }
  
  // frontend_ir.ml:114
  message _Prog {
    repeated class_defn _0 = 1;
    repeated function_defn _1 = 2;
    repeated expr _2 = 3;
  }
  
  required _tag tag = 1;
  oneof value {
    _Prog Prog = 2;
  }
}

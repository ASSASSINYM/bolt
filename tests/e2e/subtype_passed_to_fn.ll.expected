; ModuleID = 'Module'
source_filename = "Module"
target triple = "x86_64-apple-darwin18.7.0"

%_VtableFoo = type {}
%_VtableBaz = type {}
%Foo = type { %_VtableFoo*, i8*, i32, i32, i32 }

@_VtableFoo = global %_VtableFoo zeroinitializer
@_VtableBaz = global %_VtableBaz zeroinitializer

declare i32 @printf(i8*, ...)

declare i8* @GC_malloc(i64)

declare i32 @pthread_create(i8**, i8*, i8* (i8*)*, i8*)

declare i32 @pthread_join(i8*, i8**)

declare i32 @pthread_equal(i8*, i8*)

declare i8* @pthread_self()

define i32 @test(%Foo*) {
entry:
  %1 = getelementptr inbounds %Foo, %Foo* %0, i64 0, i32 4
  %2 = load i32, i32* %1, align 4
  ret i32 %2
}

define i32 @main() {
entry:
  %0 = call i8* @GC_malloc(i64 32)
  %1 = bitcast i8* %0 to %_VtableBaz**
  store %_VtableBaz* @_VtableBaz, %_VtableBaz** %1, align 8
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %0, i64 20
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 4
  %6 = bitcast i8* %0 to %Foo*
  %7 = call i32 @test(%Foo* %6)
  ret i32 0
}

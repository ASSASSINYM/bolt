Program
└──Class: Foo
   └──CapTrait: Bar
      └──Cap: Linear
   └──Field Defn: f
      └──Mode: Var
      └──TField: Int
   └──Field Defn: g
      └──Mode: Const
      └──TField: Int
   └──Field Defn: h
      └──Mode: Const
      └──TField: Int
└──Class: Choco
   └──CapTrait: Late
      └──Cap: Thread
   └──Field Defn: f
      └──Mode: Const
      └──TField: Int
└──Class: Bana
   └──CapTrait: Na
      └──Cap: Read
   └──Field Defn: f
      └──Mode: Const
      └──TField: Int
└──Trait: Late
   └──Cap: Thread
   └──Require
      └──Field Defn: f
         └──Mode: Const
         └──TField: Int
└──Trait: Na
   └──Cap: Read
   └──Require
      └──Field Defn: f
         └──Mode: Const
         └──TField: Int
└──Trait: Bar
   └──Cap: Linear
   └──Require
      └──Field Defn: f
         └──Mode: Var
         └──TField: Int
   └──Require
      └──Field Defn: g
         └──Mode: Const
         └──TField: Int
   └──Require
      └──Field Defn: h
         └──Mode: Const
         └──TField: Int
└── Function: f
   └── Return type: Int
   └──Param: x
      └──Type expr: Int
   └──Expr: Block
      └──Type expr: Int
      └──Expr: Variable: x
         └──Type expr: Int
└──Expr: Block
   └──Type expr: Class: Choco
   └──Expr: Let var: x
      └──Type expr: Class: Choco
      └──Expr: Constructor for: Choco
         └──Type expr: Class: Choco
         └── Field: f
            └──Type expr: Int
            └──Expr: Int:5
   └──Expr: Finish_async
      └──Type expr: Class: Choco
      └──Expr: Block
         └──Type expr: Int
         └──Expr: App
            └──Type expr: Int
            └──Function: f
            └──Expr: Int:5
      └──Expr: Block
         └──Type expr: Int
         └──Expr: Let var: y
            └──Type expr: Class: Choco
            └──Expr: Constructor for: Choco
               └──Type expr: Class: Choco
               └── Field: f
                  └──Type expr: Int
                  └──Expr: Int:5
         └──Expr: Let var: z
            └──Type expr: Class: Bana
            └──Expr: Constructor for: Bana
               └──Type expr: Class: Bana
               └── Field: f
                  └──Type expr: Int
                  └──Expr: Int:1
         └──Expr: Let var: w
            └──Type expr: Class: Foo
            └──Expr: Constructor for: Foo
               └──Type expr: Class: Foo
               └── Field: g
                  └──Type expr: Int
                  └──Expr: Int:5
         └──Expr: Assign: (Class: Foo) w.f
            └──Type expr: Int
            └──Expr: Int:5
      └──Expr: Variable: x
         └──Type expr: Class: Choco

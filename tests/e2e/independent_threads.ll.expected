; ModuleID = 'Module'
source_filename = "Module"
target triple = "x86_64-apple-darwin18.7.0"

%Foo = type { i32, i32, i32 }
%function_arg_type = type {}
%function_arg_type.0 = type {}

@0 = private unnamed_addr constant [20 x i8] c"Value of x.f: %d\5Cn\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @malloc(i64)

declare i32 @pthread_create(i8**, i8*, i8* (i8*)*, i8*)

declare i32 @pthread_join(i8*, i8**)

define i32 @f(i32) {
entry:
  %x = alloca i32
  store i32 %0, i32* %x
  %1 = load i32, i32* %x
  ret i32 %1
}

define i32 @main() {
entry:
  %_var_x0 = alloca %Foo*
  %0 = call i8* @malloc(i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 3))
  %1 = bitcast i8* %0 to %Foo*
  %2 = getelementptr inbounds %Foo, %Foo* %1, i32 0, i32 0
  store i32 5, i32* %2
  store %Foo* %1, %Foo** %_var_x0
  %pthread = alloca i8*
  %3 = alloca %function_arg_type
  %4 = bitcast %function_arg_type* %3 to i8*
  %5 = call i32 @pthread_create(i8** %pthread, i8* null, i8* (i8*)* @_async0, i8* %4)
  %pthread1 = alloca i8*
  %6 = alloca %function_arg_type.0
  %7 = bitcast %function_arg_type.0* %6 to i8*
  %8 = call i32 @pthread_create(i8** %pthread1, i8* null, i8* (i8*)* @_async1, i8* %7)
  %9 = load %Foo*, %Foo** %_var_x0
  %10 = getelementptr inbounds %Foo, %Foo* %9, i32 0, i32 0
  %11 = load i32, i32* %10
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @0, i32 0, i32 0), i32 %11)
  %13 = load i8*, i8** %pthread
  %14 = call i32 @pthread_join(i8* %13, i8** null)
  %15 = load i8*, i8** %pthread1
  %16 = call i32 @pthread_join(i8* %15, i8** null)
  ret i32 0
}

define i8* @_async0(i8*) {
entry:
  %1 = bitcast i8* %0 to %function_arg_type*
  %2 = call i32 @f(i32 5)
  ret i8* null
}

define i8* @_async1(i8*) {
entry:
  %_var_w0 = alloca %Foo*
  %1 = bitcast i8* %0 to %function_arg_type.0*
  %2 = call i8* @malloc(i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 3))
  %3 = bitcast i8* %2 to %Foo*
  %4 = getelementptr inbounds %Foo, %Foo* %3, i32 0, i32 1
  store i32 5, i32* %4
  store %Foo* %3, %Foo** %_var_w0
  %5 = load %Foo*, %Foo** %_var_w0
  %6 = getelementptr inbounds %Foo, %Foo* %5, i32 0, i32 0
  store i32 5, i32* %6
  ret i8* null
}

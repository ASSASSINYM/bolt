; ModuleID = 'Module'
source_filename = "Module"
target triple = "x86_64-apple-darwin18.7.0"

%_VtableFoo = type {}
%structPtrArgType = type { %Foo* }
%Foo = type { %_VtableFoo*, i8*, i32, i32, i32 }

@_VtableFoo = global %_VtableFoo zeroinitializer
@0 = private unnamed_addr constant [18 x i8] c"Value of x.f: %d\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @GC_malloc(i64)

declare i32 @pthread_create(i8**, i8*, i8* (i8*)*, i8*)

declare i32 @pthread_join(i8*, i8**)

declare i32 @pthread_equal(i8*, i8*)

declare i8* @pthread_self()

define i32 @main() {
entry:
  %0 = call i8* @GC_malloc(i64 32)
  %1 = bitcast i8* %0 to %_VtableFoo**
  store %_VtableFoo* @_VtableFoo, %_VtableFoo** %1, align 8
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %0, i64 20
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %0, i64 24
  %7 = bitcast i8* %6 to i32*
  store i32 4, i32* %7, align 4
  %pthread = alloca i8*, align 8
  %8 = alloca %structPtrArgType, align 8
  %9 = bitcast %structPtrArgType* %8 to i8**
  store i8* %0, i8** %9, align 8
  %10 = bitcast %structPtrArgType* %8 to i8*
  %11 = call i32 @pthread_create(i8** nonnull %pthread, i8* null, i8* (i8*)* nonnull @_async0, i8* nonnull %10)
  %12 = load i8*, i8** %pthread, align 8
  %13 = call i32 @pthread_join(i8* %12, i8** null)
  %14 = load i32, i32* %7, align 4
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @0, i64 0, i64 0), i32 %14)
  ret i32 0
}

define i8* @_async0(i8*) {
entry:
  %1 = bitcast i8* %0 to %structPtrArgType*
  %2 = getelementptr inbounds %structPtrArgType, %structPtrArgType* %1, i32 0, i32 0
  %3 = load %Foo*, %Foo** %2
  %_x0 = alloca %Foo*
  store %Foo* %3, %Foo** %_x0
  %4 = load %Foo*, %Foo** %_x0
  %5 = getelementptr inbounds %Foo, %Foo* %4, i32 0, i32 4
  store i32 6, i32* %5
  ret i8* null
}

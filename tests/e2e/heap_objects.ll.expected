; ModuleID = 'Module'
source_filename = "Module"
target triple = "x86_64-apple-darwin18.7.0"

%pthread_t = type opaque
%Foo = type { %pthread_t*, i32, i32, i32 }
%function_arg_type = type { %Foo* }

@0 = private unnamed_addr constant [20 x i8] c"Value of x.f: %d\5Cn\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @malloc(i64)

declare i32 @pthread_create(%pthread_t**, i8*, i8* (i8*)*, i8*)

declare i32 @pthread_join(%pthread_t*, i8**)

declare i32 @pthread_equal(%pthread_t*, %pthread_t*)

declare %pthread_t* @pthread_self()

define i32 @main() {
entry:
  %_var_x0 = alloca %Foo*
  %0 = call i8* @malloc(i64 ptrtoint (%Foo* getelementptr (%Foo, %Foo* null, i64 1) to i64))
  %1 = bitcast i8* %0 to %Foo*
  %2 = getelementptr inbounds %Foo, %Foo* %1, i32 0, i32 1
  store i32 0, i32* %2
  %3 = getelementptr inbounds %Foo, %Foo* %1, i32 0, i32 2
  store i32 0, i32* %3
  %4 = getelementptr inbounds %Foo, %Foo* %1, i32 0, i32 3
  store i32 4, i32* %4
  store %Foo* %1, %Foo** %_var_x0
  %pthreadPtr = alloca %pthread_t*
  %5 = alloca %function_arg_type
  %6 = load %Foo*, %Foo** %_var_x0
  %7 = getelementptr inbounds %function_arg_type, %function_arg_type* %5, i32 0, i32 0
  store %Foo* %6, %Foo** %7
  %8 = bitcast %function_arg_type* %5 to i8*
  %9 = call i32 @pthread_create(%pthread_t** %pthreadPtr, i8* null, i8* (i8*)* @_async0, i8* %8)
  %10 = load %pthread_t*, %pthread_t** %pthreadPtr
  %11 = call i32 @pthread_join(%pthread_t* %10, i8** null)
  %12 = load %Foo*, %Foo** %_var_x0
  %13 = getelementptr inbounds %Foo, %Foo* %12, i32 0, i32 3
  %14 = load i32, i32* %13
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @0, i32 0, i32 0), i32 %14)
  ret i32 0
}

define i8* @_async0(i8*) {
entry:
  %1 = bitcast i8* %0 to %function_arg_type*
  %2 = getelementptr inbounds %function_arg_type, %function_arg_type* %1, i32 0, i32 0
  %3 = load %Foo*, %Foo** %2
  %_var_x0 = alloca %Foo*
  store %Foo* %3, %Foo** %_var_x0
  %4 = load %Foo*, %Foo** %_var_x0
  %5 = getelementptr inbounds %Foo, %Foo* %4, i32 0, i32 3
  store i32 6, i32* %5
  ret i8* null
}

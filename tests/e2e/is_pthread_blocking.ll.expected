; ModuleID = 'Module'
source_filename = "Module"
target triple = "x86_64-apple-darwin18.7.0"

%function_arg_type = type { i32 }

@0 = private unnamed_addr constant [17 x i8] c"Value of x: %d\5Cn\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @malloc(i64)

declare i32 @pthread_create(i8**, i8*, i8* (i8*)*, i8*)

declare i32 @pthread_join(i8*, i8**)

define i32 @main() {
entry:
  %_var_x0 = alloca i32
  store i32 5, i32* %_var_x0
  %pthread = alloca i8*
  %0 = alloca %function_arg_type
  %1 = load i32, i32* %_var_x0
  %2 = getelementptr inbounds %function_arg_type, %function_arg_type* %0, i32 0, i32 0
  store i32 %1, i32* %2
  %3 = bitcast %function_arg_type* %0 to i8*
  %4 = call i32 @pthread_create(i8** %pthread, i8* null, i8* (i8*)* @_async0, i8* %3)
  %5 = load i32, i32* %_var_x0
  %6 = load i8*, i8** %pthread
  %7 = call i32 @pthread_join(i8* %6, i8** null)
  %8 = load i32, i32* %_var_x0
  ret i32 0
}

define i8* @_async0(i8*) {
entry:
  %1 = bitcast i8* %0 to %function_arg_type*
  %2 = getelementptr inbounds %function_arg_type, %function_arg_type* %1, i32 0, i32 0
  %3 = load i32, i32* %2
  %_var_x0 = alloca i32
  store i32 %3, i32* %_var_x0
  store i32 6, i32* %_var_x0
  %4 = load i32, i32* %_var_x0
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @0, i32 0, i32 0), i32 %4)
  ret i8* null
}

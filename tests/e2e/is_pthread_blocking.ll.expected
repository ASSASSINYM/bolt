; ModuleID = 'Module'
source_filename = "Module"
target triple = "x86_64-apple-darwin18.7.0"

%pthread_t = type opaque
%function_arg_type = type {}

@0 = private unnamed_addr constant [16 x i8] c"Value of x: %d\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @GC_malloc(i64)

declare i32 @pthread_create(%pthread_t**, i8*, i8* (i8*)*, i8*)

declare i32 @pthread_join(%pthread_t*, i8**)

declare i32 @pthread_equal(%pthread_t*, %pthread_t*)

declare %pthread_t* @pthread_self()

define i32 @main() {
entry:
  %0 = alloca %function_arg_type, align 8
  %pthreadPtr = alloca %pthread_t*, align 8
  %1 = bitcast %function_arg_type* %0 to i8*
  %2 = call i32 @pthread_create(%pthread_t** nonnull %pthreadPtr, i8* null, i8* (i8*)* nonnull @_async0, i8* nonnull %1)
  %3 = load %pthread_t*, %pthread_t** %pthreadPtr, align 8
  %4 = call i32 @pthread_join(%pthread_t* %3, i8** null)
  ret i32 0
}

define i8* @_async0(i8*) {
entry:
  %_x0 = alloca i32
  %1 = bitcast i8* %0 to %function_arg_type*
  store i32 6, i32* %_x0
  %2 = load i32, i32* %_x0
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @0, i32 0, i32 0), i32 %2)
  ret i8* null
}

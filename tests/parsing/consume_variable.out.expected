Program
└──Class: Foo
   └──CapTrait: Bar
      └──Cap: Linear
   └──Field Defn: f
      └──Mode: Const
      └──TField: Int
   └──Field Defn: g
      └──Mode: Const
      └──TField: Int
   └──Field Defn: h
      └──Mode: Const
      └──TField: Int
└──Class: Choco
   └──CapTrait: Late
      └──Cap: Thread
   └──Field Defn: f
      └──Mode: Const
      └──TField: Int
└──Class: Bana
   └──CapTrait: Na
      └──Cap: Read
   └──Field Defn: f
      └──Mode: Const
      └──TField: Int
└──Trait: Late
   └──Cap: Thread
   └──Require
      └──Field Defn: f
         └──Mode: Const
         └──TField: Int
└──Trait: Na
   └──Cap: Read
   └──Require
      └──Field Defn: f
         └──Mode: Const
         └──TField: Int
└──Trait: Bar
   └──Cap: Linear
   └──Require
      └──Field Defn: f
         └──Mode: Const
         └──TField: Int
   └──Require
      └──Field Defn: g
         └──Mode: Const
         └──TField: Int
   └──Require
      └──Field Defn: h
         └──Mode: Const
         └──TField: Int
└──Expr: Seq
   └──Expr: Let var: x
      └──Expr: Constructor for:Foo
         └── Field: f
            └──Expr: Int:4
         └── Field: g
            └──Expr: Int:5
         └── Field: h
            └──Expr: Int:6
      └──Expr: Let var: y
         └──Expr: Consume
            └──Expr: Variable:x
         └──Expr: Let var: z
            └──Expr: Int:5
            └──Expr: Let var: w
               └──Expr: Consume
                  └──Expr: Variable:z
               └──Expr: Objfield: y.h
   └──Expr: Let var: x
      └──Expr: Constructor for:Choco
         └── Field: f
            └──Expr: Int:5
      └──Expr: Let var: y
         └──Expr: Consume
            └──Expr: Variable:x
         └──Expr: Variable:y
   └──Expr: Let var: x
      └──Expr: Constructor for:Bana
         └── Field: f
            └──Expr: Int:5
      └──Expr: Let var: y
         └──Expr: Consume
            └──Expr: Variable:x
         └──Expr: Variable:y

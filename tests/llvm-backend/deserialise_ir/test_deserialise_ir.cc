#include <stdlib.h>

#include <string>

#include "gtest/gtest.h"
#include "src/frontend_ir.pb.h"
#include "src/llvm-backend/deserialise_ir/deserialise_protobuf.h"

const char *printDeserialisedProtoBuf(std::string filePath) {
  return (deserialiseProtobufFile(filePath)).DebugString().c_str();
}

TEST(TestDeserialiseIR, Foo) {
  std::string filePath(
      "tests/llvm-backend/"
      "deserialise_ir/"
      "foo.compiled");
  ASSERT_STREQ(
      printDeserialisedProtoBuf(filePath),
      "tag: Prog_tag\nProg {\n  _0 {\n    tag: TClass_tag\n    TClass {\n      "
      "_0: \"Foo\"\n      _1 {\n        tag: TEInt_tag\n      }\n      _1 {\n  "
      "      tag: TEInt_tag\n      }\n      _1 {\n        tag: TEInt_tag\n     "
      " }\n    }\n  }\n  _0 {\n    tag: TClass_tag\n    TClass {\n      _0: "
      "\"Choco\"\n      _1 {\n        tag: TEInt_tag\n      }\n    }\n  }\n  "
      "_0 {\n    tag: TClass_tag\n    TClass {\n      _0: \"Ban\"\n      _1 "
      "{\n        tag: TEInt_tag\n      }\n      _1 {\n        tag: "
      "TEInt_tag\n      }\n    }\n  }\n  _1 {\n    tag: TFunction_tag\n    "
      "TFunction {\n      _0: \"f\"\n      _1 {\n        tag: TEInt_tag\n      "
      "}\n      _2 {\n        tag: TParam_tag\n        TParam {\n          _0 "
      "{\n            tag: TEInt_tag\n          }\n          _1: \"x\"\n       "
      " }\n      }\n      _3 {\n        tag: Identifier_tag\n        "
      "Identifier {\n          tag: Variable_tag\n          Variable: \"x\"\n  "
      "      }\n      }\n    }\n  }\n  _2 {\n    tag: Let_tag\n    Let {\n     "
      " _0: \"_var_x0\"\n      _1 {\n        tag: Constructor_tag\n        "
      "Constructor {\n          _0: \"Foo\"\n          _1 {\n            tag: "
      "ConstructorArg_tag\n            ConstructorArg {\n              _0: 0\n "
      "             _1 {\n                tag: Integer_tag\n                "
      "Integer: 5\n              }\n            }\n          }\n        }\n    "
      "  }\n    }\n  }\n  _2 {\n    tag: FinishAsync_tag\n    FinishAsync {\n  "
      "    _0 {\n        _ {\n          tag: FunctionApp_tag\n          "
      "FunctionApp {\n            _0: \"f\"\n            _1 {\n              _ "
      "{\n                tag: Integer_tag\n                Integer: 5\n       "
      "       }\n            }\n          }\n        }\n        _ {\n          "
      "tag: FunctionApp_tag\n          FunctionApp {\n            _0: \"f\"\n  "
      "          _1 {\n              _ {\n                tag: Integer_tag\n   "
      "             Integer: 5\n              }\n            }\n          }\n  "
      "      }\n      }\n      _0 {\n        _ {\n          tag: Let_tag\n     "
      "     Let {\n            _0: \"_var_w0\"\n            _1 {\n             "
      " tag: Constructor_tag\n              Constructor {\n                _0: "
      "\"Foo\"\n                _1 {\n                  tag: "
      "ConstructorArg_tag\n                  ConstructorArg {\n                "
      "    _0: 1\n                    _1 {\n                      tag: "
      "Integer_tag\n                      Integer: 5\n                    }\n  "
      "                }\n                }\n              }\n            }\n  "
      "        }\n        }\n        _ {\n          tag: Assign_tag\n          "
      "Assign {\n            _0 {\n              tag: ObjField_tag\n           "
      "   ObjField {\n                _0: \"_var_w0\"\n                _1: 0\n "
      "             }\n            }\n            _1 {\n              tag: "
      "IfElse_tag\n              IfElse {\n                _0 {\n              "
      "    tag: BinOp_tag\n                  BinOp {\n                    _0 "
      "{\n                      tag: BinOpAnd_tag\n                    }\n     "
      "               _1 {\n                      tag: BinOp_tag\n             "
      "         BinOp {\n                        _0 {\n                        "
      "  tag: BinOpLessThan_tag\n                        }\n                   "
      "     _1 {\n                          tag: Identifier_tag\n              "
      "            Identifier {\n                            tag: "
      "ObjField_tag\n                            ObjField {\n                  "
      "            _0: \"_var_w0\"\n                              _1: 0\n      "
      "                      }\n                          }\n                  "
      "      }\n                        _2 {\n                          tag: "
      "Integer_tag\n                          Integer: 5\n                     "
      "   }\n                      }\n                    }\n                  "
      "  _2 {\n                      tag: BinOp_tag\n                      "
      "BinOp {\n                        _0 {\n                          tag: "
      "BinOpGreaterThanEq_tag\n                        }\n                     "
      "   _1 {\n                          tag: Identifier_tag\n                "
      "          Identifier {\n                            tag: ObjField_tag\n "
      "                           ObjField {\n                              "
      "_0: \"_var_w0\"\n                              _1: 0\n                  "
      "          }\n                          }\n                        }\n   "
      "                     _2 {\n                          tag: Integer_tag\n "
      "                         Integer: 1\n                        }\n        "
      "              }\n                    }\n                  }\n           "
      "     }\n                _1 {\n                  _ {\n                   "
      " tag: BinOp_tag\n                    BinOp {\n                      _0 "
      "{\n                        tag: BinOpPlus_tag\n                      "
      "}\n                      _1 {\n                        tag: "
      "Integer_tag\n                        Integer: 5\n                      "
      "}\n                      _2 {\n                        tag: "
      "Integer_tag\n                        Integer: 1\n                      "
      "}\n                    }\n                  }\n                }\n      "
      "          _2 {\n                  _ {\n                    tag: "
      "Integer_tag\n                    Integer: 3\n                  }\n      "
      "          }\n              }\n            }\n          }\n        }\n   "
      "   }\n      _1 {\n        _ {\n          tag: Identifier_tag\n          "
      "Identifier {\n            tag: Variable_tag\n            Variable: "
      "\"_var_x0\"\n          }\n        }\n      }\n    }\n  }\n}\n");
}
